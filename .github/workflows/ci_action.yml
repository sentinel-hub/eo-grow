name: build

on:
  push:
  schedule:
    - cron: '0 0 * * *'

env:
  # The only way to simulate if-else statement
  CHECKOUT_BRANCH: ${{ github.event_name == 'push' && github.ref || 'develop' }}

jobs:

  check-code-black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      
      - name: Run black
        run: |
          pip install black[jupyter]
          black . --check --diff
  
  check-code-flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      
      - name: Run flake8
        run: |
          pip install flake8
          flake8

  check-code-isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      
      - name: Run isort
        run: |
          pip install isort
          isort . --diff --check

  check-code-mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      
      - name: Install packages
        run: |
          pip install -e .[DEV]
      
      - name: Run mypy
        run: |
          mypy eogrow

  test-on-github:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.8'
          - '3.9'
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install packages
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable -y
          sudo apt-get update
          sudo apt-get install -y build-essential libgdal-dev graphviz proj-bin gcc libproj-dev libspatialindex-dev
          export CPLUS_INCLUDE_PATH=/usr/include/gdal
          export C_INCLUDE_PATH=/usr/include/gdal
          pip install -e .[DEV]
          pip install gdal==$(gdal-config --version | awk -F'[.]' '{print $1"."$2}')

      - name: Run fast tests
        if: matrix.python-version != '3.9'
        run: |
          pytest -m "fast"

      - name: Run fast and chain integration tests
        if: matrix.python-version == '3.9'
        run: |
          sentinelhub.config \
            --sh_client_id "${{ secrets.SH_CLIENT_ID }}" \
            --sh_client_secret "${{ secrets.SH_CLIENT_SECRET }}"
          pytest -m "fast"
          pytest -m "chain"

  mirror-to-gitlab:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Mirror + trigger CI
        uses: SvanBoxel/gitlab-mirror-and-ci-action@master
        with:
          args: "https://git.sinergise.com/eo/code/eo-grow"
        env:
          GITLAB_HOSTNAME: "git.sinergise.com"
          GITLAB_USERNAME: "github-action"
          GITLAB_PASSWORD: ${{ secrets.GITLAB_PASSWORD }}
          GITLAB_PROJECT_ID: "878"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
